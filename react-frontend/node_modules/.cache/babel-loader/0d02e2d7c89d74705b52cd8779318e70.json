{"ast":null,"code":"var _jsxFileName = \"/home/hemant/TSIM/react-frontend/src/components/general/SearchAndUpdate.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./SearchAndUpdate.css\";\nexport default class SearchAndUpdate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pinCode: this.props.value,\n      errorMessage: null\n    };\n  }\n\n  getValue(pinCode) {\n    const pin = pinCode.replace(/\\D/g, \"\");\n\n    if (pinCode.length <= 6) {\n      this.setState({\n        pinCode: pin\n      });\n    }\n\n    if (this.props.onChange) {\n      this.props.onChange(pin);\n    }\n  }\n\n  handleOnFocusInput(event) {\n    if (this.props.onFocusInput) {\n      this.props.onFocusInput(event);\n    }\n  }\n\n  handleBlurInput() {\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n\n    this.onUpdate();\n  }\n\n  handleKeyUp(event) {\n    if (event.key === \"Go\" || event.key === \"Enter\") {\n      this.onUpdate();\n    }\n  }\n\n  onUpdate() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: styles.base,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.inputSearchHolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.inputHolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.placeholder), React.createElement(\"div\", {\n      className: styles.buttonHolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.buttonCover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"icon\"))));\n  }\n\n}\nSearchAndUpdate.propTypes = {\n  placeholder: PropTypes.string\n};\nSearchAndUpdate.defaultProps = {\n  placeholder: \"search\"\n};","map":{"version":3,"sources":["/home/hemant/TSIM/react-frontend/src/components/general/SearchAndUpdate.js"],"names":["React","PropTypes","styles","SearchAndUpdate","Component","constructor","props","state","pinCode","value","errorMessage","getValue","pin","replace","length","setState","onChange","handleOnFocusInput","event","onFocusInput","handleBlurInput","onBlur","onUpdate","handleKeyUp","key","render","base","inputSearchHolder","inputHolder","placeholder","buttonHolder","buttonCover","propTypes","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,eAAe,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA8C;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,KADT;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AACDC,EAAAA,QAAQ,CAACH,OAAD,EAAU;AAChB,UAAMI,GAAG,GAAGJ,OAAO,CAACK,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAAZ;;AACA,QAAIL,OAAO,CAACM,MAAR,IAAkB,CAAtB,EAAyB;AACvB,WAAKC,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAEI;AAAX,OAAd;AACD;;AACD,QAAI,KAAKN,KAAL,CAAWU,QAAf,EAAyB;AACvB,WAAKV,KAAL,CAAWU,QAAX,CAAoBJ,GAApB;AACD;AACF;;AACDK,EAAAA,kBAAkB,CAACC,KAAD,EAAQ;AACxB,QAAI,KAAKZ,KAAL,CAAWa,YAAf,EAA6B;AAC3B,WAAKb,KAAL,CAAWa,YAAX,CAAwBD,KAAxB;AACD;AACF;;AAEDE,EAAAA,eAAe,GAAG;AAChB,QAAI,KAAKd,KAAL,CAAWe,MAAf,EAAuB;AACrB,WAAKf,KAAL,CAAWe,MAAX;AACD;;AACD,SAAKC,QAAL;AACD;;AAEDC,EAAAA,WAAW,CAACL,KAAD,EAAQ;AACjB,QAAIA,KAAK,CAACM,GAAN,KAAc,IAAd,IAAsBN,KAAK,CAACM,GAAN,KAAc,OAAxC,EAAiD;AAC/C,WAAKF,QAAL;AACD;AACF;;AACDA,EAAAA,QAAQ,GAAG,CAAE;;AACbG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAEvB,MAAM,CAACwB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAExB,MAAM,CAACyB,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqC,KAAKtB,KAAL,CAAWuB,WAAhD,CADF,EAEE;AAAK,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAE5B,MAAM,CAAC6B,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAFF,CADF,CADF;AAUD;;AA/C0D;AAiD7D5B,eAAe,CAAC6B,SAAhB,GAA4B;AAC1BH,EAAAA,WAAW,EAAE5B,SAAS,CAACgC;AADG,CAA5B;AAIA9B,eAAe,CAAC+B,YAAhB,GAA+B;AAC7BL,EAAAA,WAAW,EAAE;AADgB,CAA/B","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./SearchAndUpdate.css\";\nexport default class SearchAndUpdate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pinCode: this.props.value,\n      errorMessage: null\n    };\n  }\n  getValue(pinCode) {\n    const pin = pinCode.replace(/\\D/g, \"\");\n    if (pinCode.length <= 6) {\n      this.setState({ pinCode: pin });\n    }\n    if (this.props.onChange) {\n      this.props.onChange(pin);\n    }\n  }\n  handleOnFocusInput(event) {\n    if (this.props.onFocusInput) {\n      this.props.onFocusInput(event);\n    }\n  }\n\n  handleBlurInput() {\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n    this.onUpdate();\n  }\n\n  handleKeyUp(event) {\n    if (event.key === \"Go\" || event.key === \"Enter\") {\n      this.onUpdate();\n    }\n  }\n  onUpdate() {}\n  render() {\n    return (\n      <div className={styles.base}>\n        <div className={styles.inputSearchHolder}>\n          <div className={styles.inputHolder}>{this.props.placeholder}</div>\n          <div className={styles.buttonHolder}>\n            <div className={styles.buttonCover}>icon</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nSearchAndUpdate.propTypes = {\n  placeholder: PropTypes.string\n};\n\nSearchAndUpdate.defaultProps = {\n  placeholder: \"search\"\n};\n"]},"metadata":{},"sourceType":"module"}